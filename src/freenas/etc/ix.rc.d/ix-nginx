#!/bin/sh
#
# $FreeBSD$
#

# PROVIDE: ix-nginx
# REQUIRE: ix-warden
# BEFORE: nginx django

. /etc/rc.freenas


NGINX_PLUGINS_CONF="${HTTPDDIR}/plugins.conf"


# TODO: MOVE THIS TO MIDDLEWARED AS WELL
generate_plugins_conf()
{
	local IFS="|"
	local nginx_location

	: > "${NGINX_PLUGINS_CONF}"

        # Workaround: config check fail if it doesnt exist
        mkdir -p /var/tmp/nginx 2> /dev/null > /dev/null

	${FREENAS_SQLITE_CMD} ${RO_FREENAS_CONFIG} "
	SELECT
		id,
		plugin_name,
		plugin_jail,
		plugin_enabled,
		plugin_port,
		plugin_path

	FROM
		plugins_plugins

	ORDER BY
		-id
	" | \
	while read -r id name jail enabled port ppath
	do
		local ipv4=$(jail_get_ipv4 "${jail}")
		local ipv6=$(jail_get_ipv6 "${jail}")
		local jpath=$(jail_get_path "${jail}")
		local ip=

		#
		# Default to IPv4 now if it exists, I'm unsure if
		# this will work with IPv6, needs testing.
		#
		if [ -n "${ipv4}" ]
		then
			jail_get_ip_and_netmask "${ipv4}"
			ip="${JIP}"

		elif [ -n "${ipv6}" ]
		then
			jail_get_ip_and_netmask "${ipv6}"
			ip="${JIP}"
		fi

		if [ -z "${name}" -o -z "${ip}" -o -z "${ppath}" ]
		then
			continue
		fi

		cat<<-__EOF__>>"${NGINX_PLUGINS_CONF}"
		location ~ '/plugins/${name}/${id}/' {
		    fastcgi_pass   ${ip}:${port};
		    include		fastcgi_params;
		    root ${ppath};
__EOF__

		nginx_location="${jpath}/${ppath}/nginx_location"
		if [ -f ${nginx_location} ]; then
			tmp=$(mktemp -t nginx)
			echo "
			events {}
			http {
				server {
					location / {
						$(cat ${nginx_location})
					}
				}
			}
			" > ${tmp}
			${HTTPD} -t -c ${tmp} 2> /dev/null > /dev/null
			if [ $? -eq 0 ]; then
				sed "s/%%PLUGIN_ID%%/${id}/g" ${nginx_location} >> "${NGINX_PLUGINS_CONF}"
			fi

		fi

		cat<<-__EOF__>>"${NGINX_PLUGINS_CONF}"
		}
__EOF__

	done
}
